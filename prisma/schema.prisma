// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String                 @id @default(auto()) @map("_id") @db.ObjectId
  username      String                 @unique
  name          String?
  isOnline      Boolean                @default(false)
  isBot         Boolean                @default(false)
  createdAt     DateTime               @default(now())
  updatedAt     DateTime               @updatedAt
  
  conversations UserConversation[]
  messages      Message[]
}

model Conversation {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  isGroup     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  participants UserConversation[]
  messages     Message[]
}

model UserConversation {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  userId         String       @db.ObjectId
  conversationId String       @db.ObjectId
  joinedAt       DateTime     @default(now())
  role           String       @default("member") // "admin", "member", etc.
  
  
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  
  @@unique([userId, conversationId])
}

model Message {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  content        String
  messageType    String       @default("text") // "text", "image", "file", etc.
  senderId       String       @db.ObjectId
  conversationId String       @db.ObjectId
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  
  
  sender         User         @relation(fields: [senderId], references: [id], onDelete: Cascade)
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
}


